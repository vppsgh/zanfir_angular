{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts.AppComponent.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/home.component.ts.HomeComponent.html","./src/app/home.component.ts","./src/app/login.component.ts.LoginComponent.html","./src/app/login.component.ts","./src/app/material-module.ts","./src/app/messages.component.ts.MessagesComponent.html","./src/app/messages.component.ts","./src/app/nav.component.ts.NavComponent.html","./src/app/nav.component.ts","./src/app/new-message.component.ts.NewMessageComponent.html","./src/app/new-message.component.ts","./src/app/register.component.html","./src/app/register.component.ts","./src/app/web.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","\n    <nav></nav>\n    <router-outlet></router-outlet>\n  ","import { Component } from '@angular/core';\r\nimport { NavComponent } from './nav.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n    <nav></nav>\r\n    <router-outlet></router-outlet>\r\n  `,\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n// import { MaterialModule } from './material-module';\r\n// import { MatSliderModule } from '@angular/material/slider';\r\n// import { MatButtonModule } from '@angular/material/button';\r\n\r\nimport { MaterialModule } from './material-module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MessagesComponent } from './messages.component';\r\nimport { WebService } from './web.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NewMessageComponent } from './new-message.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NavComponent } from './nav.component';\r\nimport { HomeComponent } from './home.component';\r\nimport { RegisterComponent } from './register.component';\r\nimport { AuthService } from './auth.service';\r\nimport { LoginComponent } from './login.component';\r\n\r\nvar routes = [{\r\n  path: '',\r\n  component: HomeComponent\r\n},\r\n{\r\n  path: 'messages',\r\n  component: MessagesComponent\r\n},\r\n{\r\n  path: 'messages/:name',\r\n  component: MessagesComponent\r\n},\r\n{\r\n  path: 'register',\r\n  component: RegisterComponent\r\n},\r\n{\r\n  path: 'login',\r\n  component: LoginComponent\r\n}];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MessagesComponent,\r\n    NewMessageComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  providers: [WebService, AuthService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n    BASE_URL = 'http://localhost:63145/auth';\r\n    NAME_KEY = 'name';\r\n    TOKEN_KEY = 'token';\r\n\r\n    constructor(private http: HttpClient, private router: Router) {}\r\n\r\n    get name() {\r\n        return localStorage.getItem(this.NAME_KEY);\r\n    }\r\n\r\n    get isAuthenticated() {\r\n        return !!localStorage.getItem(this.TOKEN_KEY);\r\n    }\r\n\r\n    login(loginData) {\r\n        console.log(\"AA \" + loginData.email + \" BB \" + loginData.password);\r\n        this.http.post<any>(this.BASE_URL + '/login', loginData).subscribe( res => {\r\n            this.authenticate(res);\r\n        });\r\n    }\r\n\r\n    register(user) {\r\n        delete user.confirmPassword;\r\n        this.http.post<any>(this.BASE_URL + '/register', user).subscribe( res => {\r\n            this.authenticate(res);\r\n        });\r\n    }\r\n    logout() {\r\n        localStorage.removeItem(this.NAME_KEY);\r\n        localStorage.removeItem(this.TOKEN_KEY);\r\n    }\r\n\r\n    authenticate(res) {\r\n        var authResponse = res;\r\n        if (!authResponse.token)\r\n            return;\r\n\r\n        localStorage.setItem(this.TOKEN_KEY, authResponse.token);\r\n        localStorage.setItem(this.NAME_KEY, authResponse.firstName);\r\n        this.router.navigate(['/']);\r\n    }\r\n}\r\n\r\n\r\n","\n    <new-message></new-message>\n    <messages></messages>\n  ","import { Component } from '@angular/core';\r\nimport { NavComponent } from './nav.component';\r\n\r\n@Component({\r\n  selector: 'home',\r\n  template: `\r\n    <new-message></new-message>\r\n    <messages></messages>\r\n  `,\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class HomeComponent {\r\n\r\n}","\n    <mat-card>\n        <form>\n            <mat-form-field>\n                <input matInput [(ngModel)]=\"this.loginData.email\" name=\"email1\" placeholder=\"Email\" type=\"email\">\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <input matInput [(ngModel)]=\"this.loginData.password\" name=\"password1\" placeholder=\"Password\" type=\"password\">\n            </mat-form-field>\n            <br>\n            <button mat-raised-button color=\"primary\" (click)=\"login()\">Login</button>\n        </form>    \n    </mat-card>\n    ","import { Component } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Component({\r\n    selector: 'login',\r\n    template: `\r\n    <mat-card>\r\n        <form>\r\n            <mat-form-field>\r\n                <input matInput [(ngModel)]=\"this.loginData.email\" name=\"email1\" placeholder=\"Email\" type=\"email\">\r\n            </mat-form-field>\r\n            <br>\r\n            <mat-form-field>\r\n                <input matInput [(ngModel)]=\"this.loginData.password\" name=\"password1\" placeholder=\"Password\" type=\"password\">\r\n            </mat-form-field>\r\n            <br>\r\n            <button mat-raised-button color=\"primary\" (click)=\"login()\">Login</button>\r\n        </form>    \r\n    </mat-card>\r\n    `,\r\n    styles: [`\r\n    .error {\r\n        background-color: #fff0f0\r\n    }\r\n  `]\r\n})\r\nexport class LoginComponent {\r\n    form;\r\n\r\n    constructor( private auth: AuthService) {}\r\n\r\n    loginData = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    login() {\r\n        console.log(this.loginData);\r\n        this.auth.login(this.loginData);\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule, MatTabLink} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n@NgModule({\r\n    exports: [\r\n        A11yModule,\r\n        CdkStepperModule,\r\n        CdkTableModule,\r\n        CdkTreeModule,\r\n        DragDropModule,\r\n        MatAutocompleteModule,\r\n        MatBadgeModule,\r\n        MatBottomSheetModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatStepperModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatDividerModule,\r\n        MatExpansionModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatNativeDateModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatTreeModule,\r\n        PortalModule,\r\n        ScrollingModule,\r\n    ]\r\n})\r\nexport class MaterialModule {}","\n        <div *ngFor=\"let message of webService.messages | async\">\n            <mat-card class=\"card\">\n                <mat-card-title [routerLink]=\"['/messages', message.owner]\" style=\"cursor:pointer\">{{message.owner}}</mat-card-title>\n                <mat-card-content>\n                    {{message.text}}\n                </mat-card-content>\n            </mat-card>\n        </div>\n    ","import { Component } from '@angular/core'\r\nimport { WebService } from './web.service'\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'messages',\r\n    template: `\r\n        <div *ngFor=\"let message of webService.messages | async\">\r\n            <mat-card class=\"card\">\r\n                <mat-card-title [routerLink]=\"['/messages', message.owner]\" style=\"cursor:pointer\">{{message.owner}}</mat-card-title>\r\n                <mat-card-content>\r\n                    {{message.text}}\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n    `\r\n})\r\n\r\nexport class MessagesComponent {\r\n\r\n    constructor( public webService : WebService, private route: ActivatedRoute ) {\r\n    }\r\n    ngOnInit() {\r\n        var name = this.route.snapshot.params.name;\r\n        this.webService.getMessages(name);\r\n        // this.webService.messages.subscribe(messages => {\r\n        //     this.messages = messages;\r\n        // })\r\n        \r\n    }\r\n}\r\n","\n        <mat-toolbar color=\"primary\">\n            <button mat-button routerLink=\"/\" >Message board</button>\n            <button mat-button routerLink=\"/messages\" >Messages</button>\n            <span style=\"flex: 1 1 auto\"></span>\n            <button *ngIf=\"!isAuthenticated\" mat-button routerLink=\"/login\" >Login</button>\n            <button *ngIf=\"!isAuthenticated\" mat-button routerLink=\"/register\" >Register</button>\n            <button *ngIf=\"isAuthenticated\" mat-button routerLink=\"/\" >Welcome {{usrName}}</button>\n            <button *ngIf=\"isAuthenticated\" mat-button (click)=\"logout()\">Logout</button>\n        </mat-toolbar>\n    ","import { Component } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Component({\r\n    selector: 'nav',\r\n    template: `\r\n        <mat-toolbar color=\"primary\">\r\n            <button mat-button routerLink=\"/\" >Message board</button>\r\n            <button mat-button routerLink=\"/messages\" >Messages</button>\r\n            <span style=\"flex: 1 1 auto\"></span>\r\n            <button *ngIf=\"!isAuthenticated\" mat-button routerLink=\"/login\" >Login</button>\r\n            <button *ngIf=\"!isAuthenticated\" mat-button routerLink=\"/register\" >Register</button>\r\n            <button *ngIf=\"isAuthenticated\" mat-button routerLink=\"/\" >Welcome {{usrName}}</button>\r\n            <button *ngIf=\"isAuthenticated\" mat-button (click)=\"logout()\">Logout</button>\r\n        </mat-toolbar>\r\n    `\r\n})\r\nexport class NavComponent {\r\n\r\n    constructor( private auth: AuthService) {}\r\n\r\n    get usrName() {return this.auth.name;}\r\n    get isAuthenticated() {return this.auth.isAuthenticated;}\r\n\r\n    logout() {\r\n        this.auth.logout();\r\n    }\r\n}\r\n","\n        <mat-card class=\"card\">\n        <mat-card-content>\n            <mat-form-field>\n                <input [(ngModel)]=\"message.owner\" matInput placeholder=\"Name\">\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <textarea [(ngModel)]=\"message.text\" matInput placeholder=\"Message\"></textarea>\n            </mat-form-field>\n            <mat-card-actions>\n                <button (click)=\"post()\" mat-button color=\"primary\">POST</button>\n            </mat-card-actions>\n        </mat-card-content>\n        </mat-card>\n    ","import { Component } from '@angular/core'\r\nimport { WebService } from './web.service'\r\n// import { MessagesComponent } from './messages.component';\r\n\r\n@Component({\r\n    selector: 'new-message',\r\n    template: `\r\n        <mat-card class=\"card\">\r\n        <mat-card-content>\r\n            <mat-form-field>\r\n                <input [(ngModel)]=\"message.owner\" matInput placeholder=\"Name\">\r\n            </mat-form-field>\r\n            <br>\r\n            <mat-form-field>\r\n                <textarea [(ngModel)]=\"message.text\" matInput placeholder=\"Message\"></textarea>\r\n            </mat-form-field>\r\n            <mat-card-actions>\r\n                <button (click)=\"post()\" mat-button color=\"primary\">POST</button>\r\n            </mat-card-actions>\r\n        </mat-card-content>\r\n        </mat-card>\r\n    `\r\n})\r\n\r\nexport class NewMessageComponent {\r\n\r\n    constructor(private webService : WebService) {}\r\n\r\n    message = {\r\n        owner : \"\",\r\n        text : \"\"\r\n    }\r\n\r\n    post() {\r\n            console.log(this.message);\r\n            this.webService.postMessage(this.message);\r\n    }\r\n}","<mat-card>\r\n    <form [formGroup] = \"form\" (ngSubmit)=\"onSubmit()\">\r\n        <mat-form-field>\r\n            <input style=\"width:350px\" [ngClass]=\"{'error' : isValid('firstName')}\" matInput placeholder=\"First Name\" formControlName=\"firstName\">\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field>\r\n            <input style=\"width:350px\" [ngClass]=\"{'error' : isValid('lastName')}\" matInput placeholder=\"Last Name\" formControlName=\"lastName\">\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field>\r\n            <input style=\"width:350px\" [ngClass]=\"{'error' : isValid('email')}\" type=\"email\" ngModel email matInput placeholder=\"Email\" formControlName=\"email\">\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field>\r\n            <input style=\"width:350px\" [ngClass]=\"{'error' : isValid('password')}\" type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field>\r\n            <input style=\"width:350px\" [ngClass]=\"{'error' : isValid('confirmPassword')}\" type=\"password\" matInput placeholder=\"Confirm Password\" formControlName=\"confirmPassword\">\r\n        </mat-form-field>\r\n        <br>\r\n        <span *ngIf=\"form.errors?.mismatchedFields\">Passwords do not match</span>\r\n        <br>\r\n        <button mat-raised-button color=\"primary\">Register</button>\r\n    </form>    \r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Component({\r\n  selector: 'register',\r\n  templateUrl: 'register.component.html',\r\n  styles: [`\r\n    .error {\r\n        background-color: #fff0f0\r\n    }\r\n  `]\r\n})\r\nexport class RegisterComponent {\r\n    form;\r\n\r\n    constructor(private fb: FormBuilder, private auth: AuthService) {\r\n        this.form = fb.group({\r\n            firstName: ['', Validators.required],\r\n            lastName: ['', Validators.required],\r\n            email: ['', [Validators.required, emailValid()]],\r\n            password: ['', Validators.required],\r\n            confirmPassword: ['', Validators.required]\r\n        }, {validator: matchingFields('password', 'confirmPassword')})\r\n    }\r\n\r\n    onSubmit() {\r\n        console.log(this.form.errors);\r\n        this.auth.register(this.form.value);\r\n    }\r\n    isValid(control) {\r\n        return this.form.controls[control].invalid && this.form.controls[control].touched;\r\n    }\r\n}\r\n\r\nfunction matchingFields(field1, field2) {\r\n    return form => {\r\n        if (form.controls[field1].value !== form.controls[field2].value)\r\n            return { mismatchedFields: true}\r\n    }\r\n}\r\n\r\nfunction emailValid() {\r\n    return control => {\r\n        var regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\r\n        return regex.test(control.value) ? null : { invalidEmail: true}\r\n    }\r\n}\r\n","\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\n// import 'rxjs/add/operator/toPromise';\r\nimport { Subject } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class WebService {\r\n    BASE_URL = 'http://localhost:63145/api';\r\n\r\n    private messageStore = [];\r\n\r\n    private messageSubject = new Subject();\r\n\r\n    messages = this.messageSubject.asObservable();\r\n\r\n    constructor(private http: HttpClient, private sb : MatSnackBar) {\r\n        // this.getMessages();\r\n    }\r\n\r\n    getMessages(user) {\r\n            user = (user) ? '/' + user : '';\r\n            this.http.get<any>(this.BASE_URL + '/messages' + user)\r\n            .subscribe(\r\n                response => {\r\n                    console.log(response);\r\n                    this.messageStore = response;\r\n                    this.messageSubject.next(this.messageStore);\r\n                }, error => { \r\n                    this.handleError(\"Unable to get messages\");\r\n                }\r\n            )\r\n        \r\n    }\r\n\r\n    postMessage(message) {\r\n\r\n        const requestOptions: Object = {\r\n            responseType: 'text'\r\n        }\r\n        this.http.post<any>(this.BASE_URL + '/messages', message)\r\n            .subscribe(\r\n                (data) => {\r\n                this.messageStore.push(data);\r\n                this.messageSubject.next(this.messageStore);\r\n                },\r\n                (error) => { \r\n                    this.handleError(\"Unable to post message\");\r\n                }\r\n            )\r\n    }\r\n\r\n    private handleError(error) {\r\n        console.error(error);\r\n        this.sb.open(\"Unable to get message\", 'close', {duration: 2000});\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}